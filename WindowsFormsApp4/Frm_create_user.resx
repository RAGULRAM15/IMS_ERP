<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_upload.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADEAAAAxCAYAAABznEEcAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAASbSURBVGhD7ZnbT1RHGMD9L5RiW69Isis0q/H2Zk37QNoY
        azUNjYnGqA/eLzFqIr60FluWigFsSsICSdOyLt6X9ZIFolAaWVvuyFJcYFdFrH/D1/kOmcPZc77ZM3N2
        V9Hw8HtgMsz5fgzfzDcz88YnX8O7zpzEbGFOgmL42RT4eybgbPgJHAsNwJlwFKojcfAPvoSO2Ct4+vw/
        8vfSISMSwcEEbG2MwIqKMOT+2AyLqzsgv6EP3FdGYWUgloSnaQyK70/AT5EX0DX+ihxPlbQkytuj4Kps
        gfnfXYeF3nuQ5+sGd+CpJXARhU0x2BmOQzD6khxfFkcS+JcvrGrVgv/gQhDyarvJIFXY3ZKAR2POZkZZ
        4kBzH+Scv6UJfFzRBm7/v2RQTlhzbQzqeyfJ76ZCWmKUJeSm+k4teGTJL3+RgWSCks5nMEbEIEJKAgXW
        1TzUBZb++oj8OEXh70Nkux1HHySkRaQkkmbgcif5UQqPrwu+LN4Fnlp5aSM4I1Q8ZmwlDrMc4AIfVbSS
        H6MoaByBot2HYMuWr6Bo1372c5TsZ4dPIkdSStzqT8CC8zc1gZzSILga5ZP405NeTYCDP1P97MBkt9tP
        UkoUVLfps7C89m/yIxTry68nCXA2lAXI/nbsbY2T8XGEEuXtI7pAbtldcnAKzIPN24tJic3bvnGcH83D
        4g1RKMF3Ym0WfP+QA5sx5oEIp/mBOzsVJ0JK4I7MBXJ+uM1qILlSwpwHIpzkRwFDtKOTEljMcYlFle3k
        oGZEeSDCSX6URZ5bYkVICaxGuUReXQ85oJFUeSDCSX58y6pfKl6LBJ4H5n9/Q5ewq41k8kCEan6suhoj
        zyMWiT+6x3UBrFCpwYzI5oEI1fz4kx2szDFbJM6Fh3SJD733yYE4qnkgQiU/AkPWpdYicchYZlxsIQey
        Y+Ppi2Sw2E71V6Ghz1qGWCT23uydkVColYxkU6Km+0VSvMj7ORMqOSEimxJNMjmhujpRZFNCanWy7BNs
        H6AGS0W2JKT3CSRpx/bZ79hmsiUhvWMjX/sf6xKLq8S105rKe7Dhgl/D44vo7TIS2J//Lo7D21PhVamd
        goNxJjD9L6VVsYILsc8PlugBYjC8XUYC+/N2HIe3i8AqVnTCIyUQt/E8ITjViSQ++a0fPHURC9jO+6hK
        KJ8nkJ87Zk52CwUnO5GEDKoSIScnO6SgauaMvYyYjTclsa/N4RkbwRMev7LMKb0NLtNya5T4YsceKNpz
        RBrsLyOBtx2RdG47kKOhfn02zGWIUSIdUknU9VprJTO2EshnDfQNYLYlznXSS6oZKYkYY31Nuy7C72JX
        s7a1l0Jpg+OYBY49zPBdLIIiohnJNDgDGb8VN3LizgBL9umrTTxvuBSuNu3AJKZKbTuUJZA7bNXyXJ5e
        fnHVUrniFIEvRU7f8BxJcCrYhuiqxGevG5Drvas9e8letCH8zS4UnSLHlyUtCQ7WWttY0Zh/CV9PQ7CI
        FY0r6vvA7be+nmI5jdUoFnN2678sGZEwEk1MQaBnAkrYCfE4y59T4WGoisThyuCkdqCZte/Yb5s5idnC
        eyDxGv4HyfDzy2t9iC0AAAAASUVORK5CYII=
</value>
  </data>
</root>